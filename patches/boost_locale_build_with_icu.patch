diff -Naur a/libs/locale/build/Jamfile.v2 b/libs/locale/build/Jamfile.v2
--- a/libs/locale/build/Jamfile.v2	2018-12-05 20:58:19.000000000 +0100
+++ b/libs/locale/build/Jamfile.v2	2019-02-12 08:18:56.000000000 +0100
@@ -1,6 +1,6 @@
 # copyright John Maddock 2003, Artyom Beilis 2010
-# Distributed under the Boost Software License, Version 1.0. 
-# (See accompanying file LICENSE_1_0.txt or copy at 
+# Distributed under the Boost Software License, Version 1.0.
+# (See accompanying file LICENSE_1_0.txt or copy at
 # http://www.boost.org/LICENSE_1_0.txt.
 
 
@@ -32,11 +32,11 @@
 
 ICONV_PATH = [ modules.peek : ICONV_PATH ] ;
 
-lib iconv 
-  : 
+lib iconv
+  :
   : <search>$(ICONV_PATH)/lib <link>shared <runtime-link>shared
   :
-  : <include>$(ICONV_PATH)/include 
+  : <include>$(ICONV_PATH)/include
   ;
 
 explicit iconv ;
@@ -45,8 +45,8 @@
 exe has_external_iconv : has_iconv_libc_ext iconv ;
 explicit has_external_iconv ;
 
-exe accepts_shared_option   : ../build/option.cpp 
-                            :   <cxxflags>-shared-libstdc++ 
+exe accepts_shared_option   : ../build/option.cpp
+                            :   <cxxflags>-shared-libstdc++
                                 <cxxflags>-shared-libgcc
                                 <linkflags>-shared-libstdc++
                                 <linkflags>-shared-libgcc
@@ -60,142 +60,118 @@
 #end xlocale
 
 
-ICU_PATH =  [ modules.peek : ICU_PATH ] ;
-ICU_LINK =  [ modules.peek : ICU_LINK ] ;
-
-if $(ICU_LINK)
+rule path_options ( properties * )
 {
-    ICU_OPTS = <include>$(ICU_PATH)/include <linkflags>$(ICU_LINK) <dll-path>$(ICU_PATH)/bin <runtime-link>shared ;
-    ICU64_OPTS = <include>$(ICU_PATH)/include <linkflags>$(ICU_LINK) <dll-path>$(ICU_PATH)/bin64 <runtime-link>shared ;
+    local result ;
+    if <address-model>64 in $(properties) && <toolset>msvc in $(properties)
+    {
+        result = <search>$(ICU_PATH)/bin64 <search>$(ICU_PATH)/lib64 ;
+    }
+    else
+    {
+        result = <search>$(ICU_PATH)/bin <search>$(ICU_PATH)/lib ;
+    }
+    return $(result) ;
 }
-else
+
+#
+# ICU configuration:
+#
+if ! $(disable-icu)
 {
-    searched-lib icuuc : :  <name>icuuc
-                            <search>$(ICU_PATH)/lib 
-                            <link>shared 
-                            <runtime-link>shared ;
-
-    searched-lib icuuc : :  <toolset>msvc
-                            <variant>debug
-                            <name>icuucd
-                            <search>$(ICU_PATH)/lib
-                            <link>shared
-                            <runtime-link>shared ;
-
-    searched-lib icuuc : :  <name>this_is_an_invalid_library_name ;
-
-    searched-lib icudt : :  <search>$(ICU_PATH)/lib
-                            <name>icudata
-                            <link>shared
-                            <runtime-link>shared ;
-
-    searched-lib icudt : :  <search>$(ICU_PATH)/lib
-                            <name>icudt
-                            <toolset>msvc
-                            <link>shared
-                            <runtime-link>shared ;
-
-    searched-lib icudt : :  <name>this_is_an_invalid_library_name ;
-
-    searched-lib icuin : :  <search>$(ICU_PATH)/lib
-                            <name>icui18n
-                            <link>shared
-                            <runtime-link>shared ;
-
-    searched-lib icuin : :  <toolset>msvc
-                            <variant>debug
-                            <name>icuind
-                            <search>$(ICU_PATH)/lib
-                            <link>shared
-                            <runtime-link>shared ;
-
-    searched-lib icuin : :  <toolset>msvc
-                            <variant>release
-                            <name>icuin
-                            <search>$(ICU_PATH)/lib
-                            <link>shared
-                            <runtime-link>shared ;
-
-    searched-lib icuin : :  <name>this_is_an_invalid_library_name ;
-
-    explicit icuuc icudt icuin ;
-
-    ICU_OPTS =   <include>$(ICU_PATH)/include 
-      <library>icuuc/<link>shared/<runtime-link>shared 
-      <library>icudt/<link>shared/<runtime-link>shared 
-      <library>icuin/<link>shared/<runtime-link>shared
-      <dll-path>$(ICU_PATH)/bin
-        <runtime-link>shared ;
-
-
-
-    searched-lib icuuc_64 : :   <name>icuuc
-                                <search>$(ICU_PATH)/lib64 
-                                <link>shared 
-                                <runtime-link>shared ;
-
-    searched-lib icuuc_64 : :   <toolset>msvc
-                                <variant>debug
-                                <name>icuucd
-                                <search>$(ICU_PATH)/lib64
-                                <link>shared
-                                <runtime-link>shared ;
-
-    searched-lib icuuc_64 : :   <name>this_is_an_invalid_library_name ;
-
-    searched-lib icudt_64 : :   <search>$(ICU_PATH)/lib64
-                                <name>icudata
-                                <link>shared
-                                <runtime-link>shared ;
-
-    searched-lib icudt_64 : :   <search>$(ICU_PATH)/lib64
-                                <name>icudt
-                                <toolset>msvc
-                                <link>shared
-                                <runtime-link>shared ;
-
-    searched-lib icudt_64 : :   <name>this_is_an_invalid_library_name ;
-
-    searched-lib icuin_64 : :   <search>$(ICU_PATH)/lib64
-                                <name>icui18n
-                                <link>shared
-                                <runtime-link>shared ;
-
-    searched-lib icuin_64 : :   <toolset>msvc
-                                <variant>debug
-                                <name>icuind
-                                <search>$(ICU_PATH)/lib64
-                                <link>shared
-                                <runtime-link>shared ;
-
-    searched-lib icuin_64 : :   <toolset>msvc
-                                <variant>release
-                                <name>icuin
-                                <search>$(ICU_PATH)/lib64
-                                <link>shared
-                                <runtime-link>shared ;
-
-    searched-lib icuin_64 : :   <name>this_is_an_invalid_library_name ;
-
-    explicit icuuc_64 icudt_64 icuin_64 ;
-
-    ICU64_OPTS =   <include>$(ICU_PATH)/include 
-      <library>icuuc_64/<link>shared/<runtime-link>shared 
-      <library>icudt_64/<link>shared/<runtime-link>shared 
-      <library>icuin_64/<link>shared/<runtime-link>shared
-      <dll-path>$(ICU_PATH)/bin64
-        <runtime-link>shared ;
- 
-    
-}
 
-obj has_icu_obj     : ../build/has_icu_test.cpp : $(ICU_OPTS)   ;
-obj has_icu64_obj   : ../build/has_icu_test.cpp : $(ICU64_OPTS) ;
+   if [ modules.peek : ICU_PATH ]
+   {
+       ICU_PATH =  [ modules.peek : ICU_PATH ] ;
+   }
+   if [ modules.peek : ICU_LINK_TYPE ]
+   {
+       ICU_LINK_TYPE =  [ modules.peek : ICU_LINK_TYPE ] ;
+       if ! $(ICU_LINK_TYPE) in shared static
+       {
+          EXIT "error: Invalid ICU_LINK_TYPE : $(ICU_LINK_TYPE). Valid value are \"shared or static\"" : 1 ;
+       }
+   }
+   else
+   {
+      ICU_LINK_TYPE = shared ;
+   }
+
+   if [ modules.peek : ICU_LINK ]
+   {
+       ICU_LINK =  [ modules.peek : ICU_LINK ] ;
+   }
+
+   if $(ICU_LINK)
+   {
+      ICU_OPTS = <include>$(ICU_PATH)/include <linkflags>$(ICU_LINK) <dll-path>$(ICU_PATH)/bin <define>BOOST_HAS_ICU=1 <runtime-link>shared ;
+   }
+   else
+   {
+      lib icuuc : :                                                  <name>icuuc   <runtime-link>shared <conditional>@path_options ;
+      lib icuuc : : <toolset>msvc                     <variant>debug <name>icuucd  <runtime-link>shared <conditional>@path_options ;
+      lib icuuc : : <toolset>intel <target-os>windows <variant>debug <name>icuucd  <runtime-link>shared <conditional>@path_options ;
+      lib icuuc : :                                                  <name>sicuuc  <runtime-link>static <conditional>@path_options ;
+      lib icuuc : : <toolset>msvc                     <variant>debug <name>sicuucd <runtime-link>static <conditional>@path_options ;
+      lib icuuc : : <toolset>intel <target-os>windows <variant>debug <name>sicuucd <runtime-link>static <conditional>@path_options ;
+      lib icuuc : : <name>this_is_an_invalid_library_name ;
+
+      lib icudt : : <name>icudata                                   <runtime-link>shared <conditional>@path_options ;
+      lib icudt : : <name>icudt   <toolset>msvc                     <runtime-link>shared <conditional>@path_options ;
+      lib icudt : : <name>icudt   <toolset>intel <target-os>windows <runtime-link>shared <conditional>@path_options ;
+      lib icudt : : <name>sicudata                                   <runtime-link>static <conditional>@path_options ;
+      lib icudt : : <name>sicudt   <toolset>msvc                     <runtime-link>static <conditional>@path_options ;
+      lib icudt : : <name>sicudt   <toolset>intel <target-os>windows <runtime-link>static <conditional>@path_options ;
+      lib icudt : : <name>this_is_an_invalid_library_name ;
+
+      lib icuin : :                                                    <name>icui18n <runtime-link>shared <conditional>@path_options ;
+      lib icuin : : <toolset>msvc                     <variant>debug   <name>icuind  <runtime-link>shared <conditional>@path_options ;
+      lib icuin : : <toolset>msvc                                      <name>icuin   <runtime-link>shared <conditional>@path_options ;
+      lib icuin : : <toolset>intel <target-os>windows <variant>debug   <name>icuind  <runtime-link>shared <conditional>@path_options ;
+      lib icuin : : <toolset>intel <target-os>windows                  <name>icuin   <runtime-link>shared <conditional>@path_options ;
+      lib icuin : :                                                    <name>sicui18n <runtime-link>static <conditional>@path_options ;
+      lib icuin : : <toolset>msvc                     <variant>debug   <name>sicuind  <runtime-link>static <conditional>@path_options ;
+      lib icuin : : <toolset>msvc                                      <name>sicuin   <runtime-link>static <conditional>@path_options ;
+      lib icuin : : <toolset>intel <target-os>windows <variant>debug   <name>sicuind  <runtime-link>static <conditional>@path_options ;
+      lib icuin : : <toolset>intel <target-os>windows                  <name>sicuin   <runtime-link>static <conditional>@path_options ;
+      lib icuin : : <name>this_is_an_invalid_library_name ;
+
+      lib dl : : <target-os>linux <name>dl <runtime-link>shared ;
+      lib dl : : <name>this_is_an_invalid_library_name ;
+
+      ICU_OPTS =
+         <include>$(ICU_PATH)/include
+         <define>BOOST_HAS_ICU=1
+         ;
+
+      if $(ICU_LINK_TYPE) = static
+      {
+         ICU_OPTS +=
+            <library>icuuc/<link>static
+            <library>icudt/<link>static
+            <library>icuin/<link>static
+            <define>U_STATIC_IMPLEMENTATION=1
+         ;
+
+	 if [ os.name ] = LINUX
+         {
+             ICU_OPTS += <library>dl ;
+         }
+      }
+      else
+      {
+         ICU_OPTS +=
+            <library>icuuc/<link>shared
+            <library>icudt/<link>shared
+            <library>icuin/<link>shared
+         ;
+      }
+   }
 
-exe has_icu   : has_icu_obj   : $(ICU_OPTS)   ;
-exe has_icu64 : has_icu64_obj : $(ICU64_OPTS) ;
+}
 
-explicit has_icu has_icu64 ;
+unit-test has_icu : ../build/has_icu_test.cpp : $(ICU_OPTS) ;
+explicit has_icu ;
 
 
 # This function is called whenever the 'boost_locale' metatarget
@@ -206,11 +182,11 @@
 
     local result ;
     local flags-result ;
-    
+
     local found-iconv ;
-    
+
     if <boost.locale.iconv>on in $(properties)
-      || ! <boost.locale.iconv> in $(properties:G) 
+      || ! <boost.locale.iconv> in $(properties:G)
         && ! <target-os>solaris in $(properties)
     {
         # See if iconv is bundled with standard library.
@@ -218,7 +194,7 @@
         {
             found-iconv = true ;
         }
-        else 
+        else
         {
             if [ configure.builds has_external_iconv : $(properties) : "iconv (separate)" ]
             {
@@ -226,8 +202,8 @@
                 result += <library>iconv ;
             }
         }
-    }        
-    if $(found-iconv) 
+    }
+    if $(found-iconv)
     {
         flags-result += <define>BOOST_LOCALE_WITH_ICONV=1 ;
     }
@@ -240,16 +216,8 @@
         {
             found-icu = true ;
             flags-result += <define>BOOST_LOCALE_WITH_ICU=1 $(ICU_OPTS) ;
-        }
-        else if [ configure.builds has_icu64 : $(properties) : "icu (lib64)" ]
-        {
-            found-icu = true ;
-            flags-result += <define>BOOST_LOCALE_WITH_ICU=1 $(ICU64_OPTS) ;
-        }
 
-        if $(found-icu)
-        {
-            ICU_SOURCES = 
+            ICU_SOURCES =
                 boundary
                 codecvt
                 collator
@@ -260,20 +228,20 @@
                 numeric
                 time_zone
                 ;
-            
-            result += <source>icu/$(ICU_SOURCES).cpp 
-                      <library>../../thread/build//boost_thread 
+
+            result += <source>icu/$(ICU_SOURCES).cpp
+                      <library>../../thread/build//boost_thread
                       ;
         }
 
     }
-        
-    if ! $(found-iconv) && ! $(found-icu) && ! <target-os>windows in $(properties) && ! <target-os>cygwin in $(properties) 
+
+    if ! $(found-iconv) && ! $(found-icu) && ! <target-os>windows in $(properties) && ! <target-os>cygwin in $(properties)
     {
         ECHO "- Boost.Locale needs either iconv or ICU library to be built." ;
         result += <build>no ;
     }
-    
+
     if ! <boost.locale.std> in $(properties:G)
     {
         if <toolset>sun in $(properties)
@@ -283,9 +251,9 @@
         else
         {
             properties += <boost.locale.std>on ;
-        }                
+        }
     }
-    
+
     if <boost.locale.std>off in $(properties)
     {
         flags-result += <define>BOOST_LOCALE_NO_STD_BACKEND=1 ;
@@ -301,38 +269,38 @@
           ;
         result += <source>std/$(STD_SOURCES).cpp ;
     }
-    
+
     if ! <boost.locale.winapi> in $(properties:G)
     {
-        if <target-os>windows in $(properties) 
+        if <target-os>windows in $(properties)
           || <target-os>cygwin in $(properties)
         {
             properties += <boost.locale.winapi>on ;
-        }      
+        }
         else
         {
             properties += <boost.locale.winapi>off ;
-        }                
+        }
     }
-    if  <target-os>windows in $(properties) 
-        && <toolset>gcc in $(properties) 
+    if  <target-os>windows in $(properties)
+        && <toolset>gcc in $(properties)
         && <link>shared in $(properties)
         && [ configure.builds accepts_shared_option : $(properties) : "g++ -shared-* supported" ]
     {
-        flags-result += <cxxflags>-shared-libstdc++ 
+        flags-result += <cxxflags>-shared-libstdc++
                         <cxxflags>-shared-libgcc
                         <linkflags>-shared-libstdc++
                         <linkflags>-shared-libgcc
                         ;
     }
-    
+
     if <boost.locale.winapi>off in $(properties)
     {
         flags-result += <define>BOOST_LOCALE_NO_WINAPI_BACKEND=1 ;
     }
     else
     {
-        WINAPI_SOURCES = 
+        WINAPI_SOURCES =
             collate
             converter
             numeric
@@ -340,34 +308,34 @@
           ;
         result += <source>win32/$(WINAPI_SOURCES).cpp ;
     }
-    
+
     if ( ! <boost.locale.winapi>off in $(properties) || ! <boost.locale.std>off in $(properties) )
        && ( <target-os>windows in $(properties) || <target-os>cygwin in $(properties) )
     {
         result += <source>win32/lcid.cpp ;
     }
- 
+
     if ! <boost.locale.posix> in $(properties:G)
     {
-        if <target-os>linux in $(properties) 
-            || <target-os>darwin in $(properties) 
+        if <target-os>linux in $(properties)
+            || <target-os>darwin in $(properties)
             || ( <target-os>freebsd in $(properties) && [ configure.builds has_xlocale : $(properties) : "xlocale supported" ] )
         {
             properties += <boost.locale.posix>on ;
         }
         else
         {
-            properties += <boost.locale.posix>off ;            
-        }        
+            properties += <boost.locale.posix>off ;
+        }
     }
-    
+
     if <boost.locale.posix>off in $(properties)
     {
-        flags-result += <define>BOOST_LOCALE_NO_POSIX_BACKEND=1 ;        
+        flags-result += <define>BOOST_LOCALE_NO_POSIX_BACKEND=1 ;
     }
     else
     {
-        POSIX_SOURCES = 
+        POSIX_SOURCES =
           collate
           converter
           numeric
@@ -381,11 +349,11 @@
     {
         result += <source>util/gregorian.cpp ;
     }
-    
+
     result += <library>../../system/build//boost_system ;
 
 
-    if "$(flags-only)" = "flags" 
+    if "$(flags-only)" = "flags"
     {
         return $(flags-result) ;
     }
@@ -399,7 +367,7 @@
 {
     local result = [ configure-full $(properties) : "all" ] ;
     return $(result) ;
-    
+
 }
 
 rule configure-flags ( properties * )
@@ -407,15 +375,15 @@
     local result ;
     result = [ configure-full $(properties) : "flags" ] ;
     return $(result) ;
-    
+
 }
 
 
 alias build_options : : : : <conditional>@configure ;
 alias build_flags : : : : <conditional>@configure-flags ;
 
-lib boost_locale 
-    : 
+lib boost_locale
+    :
         encoding/codepage.cpp
         shared/date_time.cpp
         shared/format.cpp
@@ -428,7 +396,7 @@
         util/codecvt_converter.cpp
         util/default_locale.cpp
         util/info.cpp
-        util/locale_data.cpp  
+        util/locale_data.cpp
     :
       # Don't link explicitly, not required
       <define>BOOST_THREAD_NO_LIB=1
@@ -442,4 +410,3 @@
 
 
 # vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4
-
